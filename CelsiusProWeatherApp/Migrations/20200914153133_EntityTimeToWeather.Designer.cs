// <auto-generated />
using System;
using CelsiusProWeatherApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CelsiusProWeatherApp.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20200914153133_EntityTimeToWeather")]
    partial class EntityTimeToWeather
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CelsiusProWeatherApp.Entities.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Lat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("657f70a7-3fd5-4bb5-b61d-05132c56088e"),
                            Lat = "7.47",
                            Lon = "46.98",
                            Name = "Berne - Zollikofen"
                        },
                        new
                        {
                            Id = new Guid("022aaaa1-35e2-4484-9b9f-7d16f97705bf"),
                            Lat = "6.67",
                            Lon = "46.51",
                            Name = "Pully"
                        },
                        new
                        {
                            Id = new Guid("0a666e89-9d93-4636-afee-61bbb0811973"),
                            Lat = "8.5667",
                            Lon = "47.3831",
                            Name = "ZUERICH/FLUNTERN"
                        });
                });

            modelBuilder.Entity("CelsiusProWeatherApp.Entities.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeOfIndicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("CelsiusProWeatherApp.Entities.Weather", b =>
                {
                    b.HasOne("CelsiusProWeatherApp.Entities.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
